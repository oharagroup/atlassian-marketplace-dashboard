{"version":3,"sources":["login/loginservice.js","login/login.js","dates/daterangeservice.js","dates/daterange.js","addons/logo.js","addons/salesamount.js","addons/salescount.js","addons/salestype.js","totals/salestotal.js","totals/salessubtotal.js","totals/salessubtotals.js","totals/utils.js","tiers/utils.js","tiers/salestier.js","tiers/salestiers.js","platforms/salesplatform.js","platforms/salesplatforms.js","cards/salescard.js","platforms/utils.js","cards/salescards.js","data/dataservice.js","cards/utils.js","header/cardsheader.js","app/app.js","index.js"],"names":["LoginService","window","localStorage","getItem","this","USER_NAME","value","setItem","PASSWORD","userName","password","Login","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","handleUserNameChange","bind","assertThisInitialized","handlePasswordChange","login","cancel","close","event","setState","target","preventDefault","isOpen","_this$state","isLoggedIn","react_default","a","createElement","className","onSubmit","type","onChange","onClick","Component","DateRangeService","yesterday","Date","setDate","getDate","toISOString","substr","sessionStorage","DATE_START","DATE_END","DateRange","startDate","endDate","handleStartDateChange","handleEndDateChange","refresh","loading","concat","disabled","isRangeSet","_this$state2","AddOnLogo","_ref","logo","alt","src","AddOnSalesAmount","amount","isNaN","toLocaleString","style","currency","AddOnSalesCount","count","AddOnSalesType","AddOnSalesTotal","src_addons_logo","build_default","end","duration","decimals","useEasing","useGrouping","prefix","salescount","AddOnSalesSubtotal","salesamount","salestype","AddOnSalesSubtotals","subtotals","map","subtotal","totals_salessubtotal","key","totalFromSubtotals","reduce","total","subtotalsObjectToArray","keys","_subtotals$type","subtotalFromTier","tier","temp","subtotalFromTiers","tiers","arguments","length","undefined","AddOnSalesTier","_totalFromSubtotals","name","AddOnSalesTiers","platform","tiers_salestier","AddOnSalesPlatform","totals_salessubtotals","AddOnSalesPlatforms","platforms","platforms_salesplatform","tiers_salestiers","AddOnSalesCard","addon","totals_salestotal","logoUrl","platforms_salesplatforms","AddOnSalesCards","vendors","addons","cards_salescard","apiFetch","path","apiUrl","credentials","btoa","headers","Authorization","fetch","then","response","json","getLogoUrl","entity","_embedded","_links","image","href","fetchVendors","vendorDetails","addonFetches","vendor","vendorId","id","self","match","push","addonDetails","transactionFetches","fetchData","addonKey","offset","transactions","toConsumableArray","next","catch","console","log","transform","Promise","all","transactionDetails","index","assign","sort","b","localeCompare","unshift","_tier$type","totalFromAddons","template","PLATFORMS","defineProperty","subtotalsTemplate","tiersTemplate","transaction","_transaction$purchase","purchaseDetails","hosting","saleType","vendorAmount","units","replace","Number","data","DataService","AddOnCardsHeader","handleSettingsClick","toggleLogin","_this$props","daterange_DateRange","login_Login","App","_this2","cardsheader_AddOnCardsHeader","cards_salescards","ReactDOM","render","app_App","document","getElementById"],"mappings":"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","file":"static/js/main.4ac1989f.chunk.js","sourcesContent":["export default class LoginService {\n\tstatic get USER_NAME() {\n\t\treturn \"atlassian-id\";\n\t}\n\n\tstatic get PASSWORD() {\n\t\treturn \"atlassian-password\";\n\t}\n\n\tstatic get userName() {\n\t\treturn window.localStorage.getItem(this.USER_NAME);\n\t}\n\n\tstatic set userName(value) {\n\t\twindow.localStorage.setItem(this.USER_NAME, value);\n\t}\n\n\tstatic get password() {\n\t\treturn window.localStorage.getItem(this.PASSWORD);\n\t}\n\n\tstatic set password(value) {\n\t\twindow.localStorage.setItem(this.PASSWORD, value);\n\t}\n\n\tstatic get isLoggedIn() {\n\t\treturn (this.userName && this.password) ? true : false;\n\t}\n}","import React, { Component } from \"react\";\nimport LoginService from \"./loginservice\";\nimport \"./login.css\";\n\nexport default class Login extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n    const {userName, password} = LoginService;\n\n    this.state = {userName, password};\n\n\t\tthis.handleUserNameChange = this.handleUserNameChange.bind(this);\n\t\tthis.handlePasswordChange = this.handlePasswordChange.bind(this);\n\t\tthis.login = this.login.bind(this);\n\t\tthis.cancel = this.cancel.bind(this);\n\t\tthis.close = this.close.bind(this);\n\t}\n\n\thandleUserNameChange(event) {\n\t\tthis.setState({userName: event.target.value});\n\t}\n\n\thandlePasswordChange(event) {\n\t\tthis.setState({password: event.target.value});\n\t}\n\n\tlogin(event) {\n\t\tLoginService.userName = this.state.userName;\n\t\tLoginService.password = this.state.password;\n\t\tthis.close(event);\n\t}\n\n\tcancel(event) {\n    const {userName, password} = LoginService; // can do?\n\n    this.setState({userName, password});\n\t\tthis.close(event);\n\t}\n\n\tclose(event) {\n\t\tevent.preventDefault();\n\t\tthis.props.close();\n\t}\n\n\trender() {\n\t\tconst {isOpen} = this.props;\n\t\tconst {userName, password} = this.state;\n\n\t\treturn (\n\t\t\tLoginService.isLoggedIn && !isOpen ? null :\n\t\t\t\t<form className=\"login\" onSubmit={this.login}>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<span>Atlassian ID</span>\n\t\t\t\t\t\t<input type=\"text\" value={userName} onChange={this.handleUserNameChange}/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<span>Password</span>\n\t\t\t\t\t\t<input type=\"password\" value={password} onChange={this.handlePasswordChange}/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<input type=\"submit\" value=\"Login\"/>\n\t\t\t\t\t<button onClick={this.cancel}>Cancel</button>\n\t\t\t\t</form>\n\t\t);\n\t}\n}","export default class DateRangeService {\n\tstatic get DATE_START() {\n\t\treturn \"atlassian-marketplace-date-start\";\n\t}\n\n\tstatic get DATE_END() {\n\t\treturn \"atlassian-marketplace-date-end\";\n\t}\n\n\tstatic get yesterday() {\n\t\tconst yesterday = new Date();\n\n\t\tyesterday.setDate(yesterday.getDate() - 1);\n\n\t\treturn yesterday.toISOString().substr(0, 10);\n\t}\n\n\tstatic get startDate() {\n\t\treturn window.sessionStorage.getItem(this.DATE_START) || this.yesterday;\n\t}\n\n\tstatic set startDate(value) {\n\t\twindow.sessionStorage.setItem(this.DATE_START, value);\n\t}\n\n\tstatic get endDate() {\n\t\treturn window.sessionStorage.getItem(this.DATE_END) || this.yesterday;\n\t}\n\n\tstatic set endDate(value) {\n\t\twindow.sessionStorage.setItem(this.DATE_END, value);\n\t}\n}","import React, { Component } from \"react\";\nimport DateRangeService from \"./daterangeservice\";\nimport \"./daterange.css\";\n\nexport default class DateRange extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n    const {startDate, endDate} = DateRangeService;\n\n    this.state = {startDate, endDate};\n\n\t\tthis.handleStartDateChange = this.handleStartDateChange.bind(this);\n\t\tthis.handleEndDateChange = this.handleEndDateChange.bind(this);\n\t\tthis.refresh = this.refresh.bind(this);\n\t}\n\n\tget isRangeSet() {\n\t\tconst {startDate, endDate} = this.state;\n\t\treturn (startDate && startDate !== \"\" && endDate && endDate !== \"\") ? true : false;\n\t}\n\n\thandleStartDateChange(event) {\n\t\tconst startDate = event.target.value;\n\t\tlet {endDate} = this.state;\n\n\t\tif (startDate > endDate) {\n\t\t\tendDate = \"\";\n\t\t}\n\n\t\tthis.setState({startDate, endDate});\n\t}\n\n\thandleEndDateChange(event) {\n\t\tconst endDate = event.target.value;\n\t\tlet {startDate} = this.state;\n\n\t\tif (startDate > endDate) {\n\t\t\tstartDate = \"\";\n\t\t}\n\n\t\tthis.setState({startDate, endDate});\n\t}\n\n\trefresh(event) {\n    DateRangeService.startDate = this.state.startDate;\n\t\tDateRangeService.endDate = this.state.endDate;\n\t\tthis.props.refresh();\n\t\tevent.preventDefault();\n\t}\n\n\trender() {\n\t\tconst {loading} = this.props,\n\t\t\t\t\t{startDate, endDate} = this.state;\n\n\t\treturn (\n\t\t\t<form className=\"date-range-form\" onSubmit={this.refresh}>\n\t\t\t\t<input type=\"date\" value={startDate} onChange={this.handleStartDateChange}/>\n\t\t\t\t<span className=\"range-arrow\">&#x2192;</span>\n\t\t\t\t<input type=\"date\" value={endDate} onChange={this.handleEndDateChange}/>\n\t\t\t\t<input className={`refresh-button ${loading ? \"loading\" : \"\"}`} type=\"submit\" value=\"&#x21bb;\" disabled={!this.isRangeSet}/>\n\t\t\t</form>\n\t\t);\n\t}\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./logo.css\";\n\nconst AddOnLogo = ({logo}) => (<img alt=\"logo\" className=\"addon-logo\" src={logo}/>);\n\nAddOnLogo.propTypes = {\n\tlogo: PropTypes.string.isRequired\n};\n\nexport default AddOnLogo;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst AddOnSalesAmount = ({amount}) => (<div className=\"addon-sales-amount\">{+amount === 0 || isNaN(+amount) ? \"-\" : amount.toLocaleString(\"en-au\", {style: \"currency\", currency: \"AUD\"})}</div>);\n\nAddOnSalesAmount.propTypes = {\n\tamount: PropTypes.number.isRequired\n}\n\nexport default AddOnSalesAmount;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst AddOnSalesCount = ({count}) => (<div className=\"addon-sales-count\">{+count > 0 ? `(${count})` : ''}</div>);\n\nAddOnSalesCount.propTypes = {\n\tcount: PropTypes.number.isRequired\n};\n\nexport default AddOnSalesCount;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst AddOnSalesType = ({type}) => (<div className=\"addon-sales-type\">{type}</div>);\n\nAddOnSalesType.propTypes = {\n\ttype: PropTypes.oneOfType([\n\t\tPropTypes.oneOf([\"New\", \"Renewal\", \"Upgrade\", \"Refund\"]),\n\t\tPropTypes.oneOf([\"Cloud\", \"Server\", \"Data Center\"])\n\t])\n};\n\nexport default AddOnSalesType;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CountUp from \"react-countup\";\nimport { AddOnLogo, AddOnSalesCount } from \"../addons\";\nimport \"./salestotal.css\";\n\nconst AddOnSalesTotal = ({logo, amount, count}) => (\n\t<div className=\"addon-sales-total\">\n\t\t<AddOnLogo logo={logo}/>\n\t\t<CountUp className=\"addon-sales-amount\" end={amount} duration={2} decimals={2} useEasing={true} useGrouping={true} prefix=\"$\"/>\n\t\t<AddOnSalesCount count={count}/>\n\t</div>\n);\n\nAddOnSalesTotal.propTypes = {\n\tlogo: AddOnLogo.propTypes.logo,\n\tamount: PropTypes.number.isRequired,\n\tcount: AddOnSalesCount.propTypes.count\n};\n\nexport default AddOnSalesTotal;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AddOnSalesAmount, AddOnSalesCount, AddOnSalesType } from \"../addons\";\nimport \"./salessubtotal.css\";\n\nconst AddOnSalesSubtotal = ({type, amount, count}) => (\n\t<div className=\"addon-sales-subtotal\">\n\t\t<AddOnSalesAmount amount={amount}/>\n\t\t<AddOnSalesType type={type}/>\n\t\t<AddOnSalesCount count={count}/>\n\t</div>\n);\n\nAddOnSalesSubtotal.propTypes = {\n\ttype: AddOnSalesType.propTypes.type,\n\tamount: PropTypes.number.isRequired,\n\tcount: PropTypes.number.isRequired\n};\n\nexport default AddOnSalesSubtotal;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AddOnSalesSubtotal from \"./salessubtotal\";\nimport \"./salessubtotals.css\";\n\nconst AddOnSalesSubtotals = ({subtotals}) => (\n\t<div className=\"addon-sales-subtotals\">\n\t\t{subtotals.map(subtotal => {\n\t\t\tconst {type, amount, count} = subtotal;\n\n\t\t\treturn (\n\t\t\t\t<AddOnSalesSubtotal key={type} type={type} amount={amount} count={count}/>\n\t\t\t)\n\t\t})}\n\t</div>\n);\n\nAddOnSalesSubtotals.propTypes = {\n\tsubtotals: PropTypes.arrayOf(PropTypes.shape(AddOnSalesSubtotal.propTypes)).isRequired\n};\n\nexport default AddOnSalesSubtotals;","function totalFromSubtotals(subtotals) {\n\treturn subtotals.reduce((total, subtotal) => ({amount: total.amount + (isNaN(subtotal.amount) ? 0 : +subtotal.amount), count: total.count + (isNaN(subtotal.count) ? 0 : +subtotal.count)}), {amount: 0, count: 0});\n}\n\nfunction subtotalsObjectToArray(subtotals) {\n\treturn Object.keys(subtotals).map(type => {\n\t\tconst {amount, count} = subtotals[type];\n\n\t\treturn {type, amount, count};\n\t});\n}\n\nexport { totalFromSubtotals, subtotalsObjectToArray };","function subtotalFromTier(total, tier) {\n\treturn tier.subtotals.reduce((total, subtotal) => {\n\t\tconst {type, amount, count} = subtotal;\n\t\tconst temp = total[type] || {amount: 0, count: 0};\n\t\ttotal[type] = {amount: temp.amount + (isNaN(amount) ? 0 : +amount), count: temp.count + (isNaN(count) ? 0 : +count)};\n\t\treturn total;\n\t}, total);\n}\n\nfunction subtotalFromTiers(tiers, total = {}) {\n\treturn tiers.reduce(subtotalFromTier, total);\n}\n\nexport { subtotalFromTier, subtotalFromTiers };","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AddOnSalesAmount, AddOnSalesCount } from \"../addons\";\nimport { totalFromSubtotals } from \"../totals\";\nimport \"./salestier.css\";\n\nconst AddOnSalesTier = ({tier}) => {\n\t\tconst {amount, count} = totalFromSubtotals(tier.subtotals);\n\n\t\treturn (\n\t\t\t<tr>\n\t\t\t\t<td className=\"addon-sales-tier-name\">{tier.name}</td>\n\t\t\t\t{tier.subtotals.map(subtotal => {\n\t\t\t\t\tconst {type, amount, count} = subtotal;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<td key={type}>\n\t\t\t\t\t\t\t<AddOnSalesCount count={count}/>\n\t\t\t\t\t\t\t<AddOnSalesAmount amount={amount}/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<td>\n\t\t\t\t\t<AddOnSalesCount count={count}/>\n\t\t\t\t\t<AddOnSalesAmount amount={amount}/>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t);\n}\n\nAddOnSalesTier.propTypes = {\n\ttier: PropTypes.shape({\n\t\tname: PropTypes.string.isRequired,\n\t\tsubtotals: PropTypes.arrayOf(PropTypes.shape({\n\t\t\ttype: PropTypes.oneOf([\"New\", \"Renewal\", \"Upgrade\", \"Refund\"]).isRequired,\n\t\t\tamount: PropTypes.number,\n\t\t\tcount: PropTypes.number\n\t\t})).isRequired\n\t}).isRequired\n};\n\nexport default AddOnSalesTier;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AddOnSalesType } from \"../addons\";\nimport AddOnSalesTier from \"./salestier\";\nimport \"./salestiers.css\";\n\nconst AddOnSalesTiers = ({platform}) => (\n\t<div className=\"addon-sales-tiers\">\n\t\t<AddOnSalesType type={platform.name}/>\n\t\t<table>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th className=\"addon-sales-tier-name\">Tier</th>\n\t\t\t\t\t<th>Sales</th>\n\t\t\t\t\t<th>Renewals</th>\n\t\t\t\t\t<th>Upgrades</th>\n\t\t\t\t\t<th>Refunds</th>\n\t\t\t\t\t<th>Total</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{platform.tiers.map(tier => <AddOnSalesTier key={tier.name} tier={tier}/>)}\n\t\t\t</tbody>\n\t\t</table>\n\t</div>\n);\n\nAddOnSalesTiers.propTypes = {\n\tplatform: PropTypes.shape({\n\t\tname: PropTypes.oneOf([\"Cloud\", \"Server\", \"Data Center\"]).isRequired,\n\t\ttiers: PropTypes.arrayOf(AddOnSalesTier.propTypes.tier).isRequired\n\t}).isRequired\n};\n\nexport default AddOnSalesTiers;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AddOnSalesAmount, AddOnSalesCount, AddOnSalesType } from \"../addons\";\nimport { AddOnSalesTier } from \"../tiers\";\nimport { totalFromSubtotals, subtotalsObjectToArray, AddOnSalesSubtotals } from \"../totals\";\nimport { subtotalFromTiers } from \"../tiers\";\nimport \"./salesplatform.css\";\n\nconst AddOnSalesPlatform = ({platform}) => {\n\t\tconst subtotals = subtotalsObjectToArray(subtotalFromTiers(platform.tiers)),\n\t\t\t\t\t{amount, count} = totalFromSubtotals(subtotals);\n\n\t\treturn (\n\t\t\t<div className=\"addon-sales-platform\">\n\t\t\t\t<div className=\"addon-sales-platform-totals\">\n\t\t\t\t\t<AddOnSalesAmount amount={amount}/>\n\t\t\t\t\t<AddOnSalesType type={platform.name}/>\n\t\t\t\t\t<AddOnSalesCount count={count}/>\n\t\t\t\t</div>\n\t\t\t\t<AddOnSalesSubtotals subtotals={subtotals}/>\n\t\t\t</div>\n\t\t);\n}\n\nAddOnSalesPlatform.propTypes = {\n\tplatform: PropTypes.shape({\n\t\tname: PropTypes.oneOf([\"Cloud\", \"Server\", \"Data Center\"]).isRequired,\n\t\ttiers: PropTypes.arrayOf(AddOnSalesTier.propTypes.tier).isRequired\n\t}).isRequired\n};\n\nexport default AddOnSalesPlatform;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AddOnSalesTiers } from \"../tiers\";\nimport AddOnSalesPlatform from \"./salesplatform\";\nimport \"./salesplatforms.css\";\n\nconst AddOnSalesPlatforms = ({platforms}) => (\n\t<div className=\"addon-sales-platforms\">\n\t\t{platforms.map(platform => <AddOnSalesPlatform key={platform.name} platform={platform}/>)}\n\t\t{platforms.map(platform => <AddOnSalesTiers key={platform.name} platform={platform}/>)}\n\t</div>\n);\n\nAddOnSalesPlatforms.propTypes = {\n\tplatforms: PropTypes.arrayOf(AddOnSalesPlatform.propTypes.platform).isRequired\n}\n\nexport default AddOnSalesPlatforms;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { totalFromSubtotals, AddOnSalesTotal, AddOnSalesSubtotals } from \"../totals\";\nimport { subtotalFromPlatforms, AddOnSalesPlatforms } from \"../platforms\";\nimport \"./salescard.css\";\n\nconst AddOnSalesCard = ({addon}) => {\n\t\tconst subtotals = subtotalFromPlatforms(addon.platforms),\n\t\t\t\t\t{amount, count} = totalFromSubtotals(subtotals);\n\n\t\treturn (\n\t\t\t<div className=\"addon-sales-card\">\n\t\t\t\t<h1>{addon.name}</h1>\n\t\t\t\t<AddOnSalesTotal logo={addon.logoUrl} amount={amount} count={count}/>\n\t\t\t\t<AddOnSalesSubtotals subtotals={subtotals}/>\n\t\t\t\t<AddOnSalesPlatforms platforms={addon.platforms}/>\n\t\t\t</div>\n\t\t);\n}\n\nAddOnSalesCard.propTypes = {\n\taddon: PropTypes.shape({\n\t\tname: PropTypes.string.isRequired,\n\t\tlogoUrl: PropTypes.string.isRequired,\n\t\tplatforms: AddOnSalesPlatforms.propTypes.platforms.isRequired\n\t})\n};\n\nexport default AddOnSalesCard;","import { subtotalsObjectToArray } from \"../totals\";\nimport { subtotalFromTiers } from \"../tiers\";\n\nexport default function subtotalFromPlatforms(platforms) {\n\treturn subtotalsObjectToArray(platforms.reduce((total, platform) => subtotalFromTiers(platform.tiers, total), {}));\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AddOnSalesCard from \"./salescard\";\nimport \"./salescards.css\";\n\nconst AddOnSalesCards = ({vendors}) => {\n\t\tconst addons = vendors.length > 0 ? vendors[0].addons : [];\n\n\t\treturn (\n\t\t\t<div className=\"addon-sales-cards\">\n\t\t\t\t{addons.map(addon => <AddOnSalesCard key={addon.name} addon={addon}/>)}\n\t\t\t</div>\n\t\t);\n}\n\nAddOnSalesCards.propTypes = {\n\tvendors: PropTypes.arrayOf(PropTypes.shape({\n\t\tname: PropTypes.string.isRequired,\n\t\tlogoUrl: PropTypes.string.isRequired,\n\t\taddons: PropTypes.arrayOf(AddOnSalesCard.propTypes.addon).isRequired\n\t}))\n};\n\nexport default AddOnSalesCards;","import { LoginService } from \"../login\";\nimport { DateRangeService } from \"../dates\";\nimport { totalFromAddons } from \"../cards\";\n\n/**\n * Performs an API fetch\n * @param {String} path - API path to fetch\n * @return {Promise<Object>} - resolves to the JSON returned\n */\nfunction apiFetch(path) {\n\tconst apiHost = \"atlassian-marketplace-proxy.herokuapp.com\",  //marketplace.atlassian.com\n\t\t\t\tapiPath = \"/rest/2/\",\n\t\t\t\tapiUrl = `https://${apiHost}${apiPath}`,\n\n\t\t\t\t// Extract username and password from login service\n\t\t\t\t{ userName, password } = LoginService,\n\n\t\t\t\t// Base64 encode credentials\n\t\t\t\tcredentials = btoa(`${userName}:${password}`),\n\n\t\t\t\t// Construct the Authorization header\n\t\t\t\theaders = {headers: {Authorization: `Basic ${credentials}`}};\n\n\t// Execute the fetch and return a promise that resolves to the JSON\n\treturn fetch(`${apiUrl}${path}`, headers).then(response => response.json());\n}\n\n/**\n * Extracts the logo URL from an entity\n * @param {Object} entity - vendor or addon\n * @return {String} logoUrl\n */\nfunction getLogoUrl(entity) {\n\treturn entity._embedded.logo._links.image.href;\n}\n\n/**\n * Returns the vendors associated with the provided credentials\n * @return {Array<Object>} [{name, logoUrl, addons}] - the vendor details\n */\nfunction fetchVendors() {\n\t// Get the vendors\n\treturn apiFetch(\"vendors?forThisUser=true\").then(vendorDetails => {\n\t\t// Create an array to hold the addon fetch promises\n\t\tconst addonFetches = [];\n\n\t\t// Build an array of vendors\n\t\tconst vendors = vendorDetails._embedded.vendors.map(vendor => {\n\t\t\tconst\tid = vendor._links.self.href.match(/^\\/rest\\/2\\/vendors\\/(\\d+)$/i)[1],\n\n\t\t\t\t\t\t// Extract the vendor name\n\t\t\t\t\t\tname = vendor.name,\n\n\t\t\t\t\t\t// Extract the vendor logo\n\t\t\t\t\t\tlogoUrl = getLogoUrl(vendor);\n\n\t\t\t// Get the addons for the vendor\n\t\t\taddonFetches.push(fetchAddons(id));\n\n\t\t\treturn {name, logoUrl};\n\t\t});\n\n\t\treturn Promise.all(addonFetches).then(addonDetails => vendors.map((vendor, index) => {\n\t\t\t// Sort the cards by name\n\t\t\taddonDetails[index] = addonDetails[index].sort((a,b) => a.name.localeCompare(b.name));\n\n\t\t\t// Generate a Total card for the vendor\n\t\t\taddonDetails[index].unshift(totalFromAddons(vendor, addonDetails[index]));\n\n\t\t\treturn Object.assign(vendor, {addons: addonDetails[index]})\n\t\t}));\n\t});\n}\n\n/**\n * Returns the addons for a given vendor\n * @param {String} vendorId - the vendor\n * @return {Array<Object>} [{name, logoUrl, platforms}] - the addon details\n */\nfunction fetchAddons(vendorId) {\n\t// Get the addons\n\treturn apiFetch(`addons/vendor/${vendorId}`).then(addonDetails => {\n\t\t// Create an array to hold the transaction fetch promises\n\t\tconst transactionFetches = [];\n\n\t\t// Build an array of addons\n\t\tconst addons = addonDetails._embedded.addons.map(addon => {\n\t\t\tconst {key, name} = addon,\n\n\t\t\t\t\t\t// Extract the addon logo\n\t\t\t\t\t\tlogoUrl = getLogoUrl(addon);\n\n\t\t\t// Get the sales data for the addon\n\t\t\ttransactionFetches.push(fetchData(vendorId, key)\n\t\t\t\t.then(subtotal)\n\t\t\t\t.then(transform)\n\t\t\t);\n\n\t\t\treturn {name, logoUrl};\n\t\t});\n\n\t\treturn Promise.all(transactionFetches).then(transactionDetails => addons.map((addon, index) => Object.assign(addon, {platforms: transactionDetails[index]})));\n\t});\n}\n\n/**\n * Returns an empty addon template containing all platforms, tiers & sale types\n * @return {Object} {platform: {tier: {saleType: {count, amount}}}} - the template\n */\nfunction template() {\n\tconst {startDate, endDate} = DateRangeService,\n\t\t\t\tPER_UNIT_PRICING_INTRODUCED = \"2017-08-01\",\n\t\t\t\tLEGACY_CLOUD_TIERS = [\"10\", \"15\", \"25\", \"50\", \"100\", \"500\", \"2000\"],\n\t\t\t\tPER_UNIT_CLOUD_TIERS = [\"<=10\", \"1-100\", \"101-250\", \"251-2000\"],\n\t\t\t\tPLATFORMS = [\n\t\t\t\t\t{platform: \"Cloud\", tiers: []},\n\t\t\t\t\t{platform: \"Server\", tiers: [\"10\", \"25\", \"50\", \"100\", \"250\", \"500\", \"2000\", \"10000\", \"Unlimited\"]},\n\t\t\t\t\t{platform: \"Data Center\", tiers: [\"500\", \"1000\", \"2000\", \"3000\", \"4000\", \"5000\", \"10000\", \"15000\", \"20000\", \"25000\", \"30000\", \"35000\", \"40000\", \"Unlimited\"]}\n\t\t\t\t];\n\n\t// Include legacy cloud tiers if necessary\n\tif (startDate < PER_UNIT_PRICING_INTRODUCED) {\n\t\tPLATFORMS[0].tiers = [...PLATFORMS[0].tiers, ...LEGACY_CLOUD_TIERS]\n\t}\n\tif (endDate >= PER_UNIT_PRICING_INTRODUCED) {\n\t\tPLATFORMS[0].tiers = [...PLATFORMS[0].tiers, ...PER_UNIT_CLOUD_TIERS]\n\t}\n\n\treturn platformsTemplate(PLATFORMS);\n}\n\n/**\n * Returns an empty platforms template for the specified platforms\n * @param {Array<Object>} [{platform, tiers}] - platform and tier names\n * @return {Object} {platform: {tier: {saleType: {count, amount}}}} - the template\n */\nfunction platformsTemplate(platforms) {\n\treturn platforms.reduce((template, {platform, tiers}) => Object.assign(template, {[platform]: tiersTemplate(tiers)}), {});\n}\n\n/**\n * Returns an empty tiers template for the specified tiers\n * @param {Array<String>} - tiers\n * @return {Object} {tier: {saleType: {count, amount}}} - the template\n */\nfunction tiersTemplate(tiers) {\n\treturn tiers.reduce((template, tier) => Object.assign(template, {[tier]: subtotalsTemplate()}), {});\n}\n\n/**\n * Returns an empty subtotals template containing all sale types\n * @return {Object} {saleType: {count, amount}} - the template\n */\nfunction subtotalsTemplate() {\n\tconst SALES_TYPES = [\"New\", \"Renewal\", \"Upgrade\", \"Refund\"];\n\n\treturn SALES_TYPES.reduce((template, type) => Object.assign(template, {[type]: salesTypeTemplate()}), {});\n}\n\n/**\n * Returns an empty sales type template\n * @return {Object} {count, amount} - the template\n */\nfunction salesTypeTemplate() {\n\treturn {count: 0, amount: 0};\n}\n\n/**\n * Recursively fetches all vendor transactions from the Marketplace API for the specified date range\n * The promise resolves to an array of transactions like this:\n * [\n *   {purchaseDetails: {hosting, tier, saleType, vendorAmount}},\n * \t ...\n * ]\n *\n * @param {String} vendorId - the vendor\n * @param {String} addonKey - the addon\n * @param {Number} offset - 50 transactions per fetch\n * @param {Array} transactions - the array for storing the results\n * @return {Promise<Array>} - the transaction details\n */\nfunction fetchData(vendorId, addonKey, offset = 0, transactions = []) {\n\tconst {startDate, endDate} = DateRangeService,\n\t\t\t\tpath = `vendors/${vendorId}/reporting/sales/transactions?addon=${addonKey}&limit=50&offset=${offset}&startDate=${startDate}&endDate=${endDate}`;\n\n\t// Get the sales transactions\n\treturn apiFetch(path)\n\t\t.then(json => {\n\t\t\t// If the JSON includes transactions, append them to the previously fetched results\n\t\t\tif (json.transactions) transactions = [...transactions, ...json.transactions];\n\n\t\t\t// If there are more transactions, fetch them; otherwise return the array of transactions\n\t\t\treturn json._links.next ? fetchData(vendorId, addonKey, offset + 50, transactions) : transactions;\n\t\t})\n\t\t.catch(console.log);\n}\n\n/**\n * Converts & subtotals the array of fetched transactions\n * @param {Array} transactions - the fetched transactions\n * @return {Object} {platform: {tier: {saleType: {count, amount}}}}\n */\nfunction subtotal(transactions) {\n\treturn transactions.reduce((addons, transaction) => {\n\t\tlet {hosting, tier, saleType, vendorAmount} = transaction.purchaseDetails;\n\n\t\ttier = tier.replace(/\\sUsers/, \"\");\n\n\t\tlet units = tier.match(/Per Unit Pricing \\((\\d+) users\\)/);\n\t\tif (units && units.length >= 2 && !isNaN(Number(units[1]))) {\n\t\t\tunits = Number(units[1]);\n\t\t\tif (units <= 10) {\n\t\t\t\ttier = \"<=10\";\n\t\t\t} else if (units <= 100) {\n\t\t\t\ttier = \"1-100\";\n\t\t\t} else if (units <= 250) {\n\t\t\t\ttier = \"101-250\";\n\t\t\t} else {\n\t\t\t\ttier = \"251-2000\";\n\t\t\t}\n\t\t}\n\n\t\taddons[hosting] = addons[hosting] || {};\n\t\taddons[hosting][tier] = addons[hosting][tier] || subtotalsTemplate();\n\t\taddons[hosting][tier][saleType] = addons[hosting][tier][saleType] || {count: 0, amount: 0};\n\t\taddons[hosting][tier][saleType].count++;\n\t\taddons[hosting][tier][saleType].amount += vendorAmount;\n\n\t\treturn addons;\n\t}, template());\n}\n\n/**\n * Transforms the data to the final format\n * @param {Object} data - the converted & subtotalled transactions\n * @return {Array} [{name, tiers: [{name, subtotals: [{type, amount, count}]}]\n */\nfunction transform(data) {\n\treturn Object.keys(data).map(platform => ({\n\t\tname: platform,\n\t\ttiers: Object.keys(data[platform]).map(tier => ({\n\t\t\tname: tier,\n\t\t\tsubtotals: Object.keys(data[platform][tier]).map(type => ({\n\t\t\t\ttype,\n\t\t\t\tamount: data[platform][tier][type].amount,\n\t\t\t\tcount: data[platform][tier][type].count\n\t\t\t}))\n\t\t}))\n\t}));\n}\n\nexport default class DataService {\n\t/**\n\t * Retrieves data from the Atlassian Marketplace API\n\t * @return {Array} - the sales data for all vendors/addons\n\t */\n\tstatic refresh() {\n\t\treturn fetchVendors();\n\t}\n}\n","import { subtotalFromTier } from \"../tiers\";\n\nexport default function totalFromAddons(vendor, addons) {\n\tconst {name, logoUrl} = vendor;\n\n\tlet platforms =\taddons.reduce((total, addon) => {\n\t\treturn addon.platforms.reduce((total, platform) => {\n\t\t\tconst temp = total[platform.name] || {};\n\t\t\ttotal[platform.name] = platform.tiers.reduce((total, tier) => {\n\t\t\t\tconst temp = total[tier.name] || {};\n\t\t\t\ttotal[tier.name] = subtotalFromTier(temp, tier);\n\n\t\t\t\treturn total;\n\t\t\t}, temp);\n\n\t\t\treturn total;\n\t\t}, total);\n\t}, {});\n\n\tplatforms = Object.keys(platforms).map(name => {\n\t\tconst platform = platforms[name],\n\t\t\t\t\ttiers = Object.keys(platform).map(name => {\n\t\t\tconst tier = platform[name],\n\t\t\t\t\t\tsubtotals = Object.keys(tier).map(type => {\n\t\t\t\tconst {amount, count} = tier[type];\n\n\t\t\t\treturn {type, amount, count};\n\t\t\t});\n\n\t\t\treturn {name, subtotals};\n\t\t});\n\n\t\treturn {name, tiers};\n\t});\n\n\treturn {name, logoUrl, platforms};\n}","import React, { Component } from \"react\";\nimport { DateRange } from \"../dates\";\nimport { Login } from \"../login\";\nimport \"./cardsheader.css\";\n\nexport default class AddOnCardsHeader extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {login: false};\n\t\tthis.handleSettingsClick = this.handleSettingsClick.bind(this);\n\t\tthis.toggleLogin = this.toggleLogin.bind(this);\n\t}\n\n\thandleSettingsClick(event) {\n\t\tevent.preventDefault();\n\t\tthis.toggleLogin();\n\t}\n\n\ttoggleLogin() {\n\t\tthis.setState({login: !this.state.login});\n\t}\n\n\trender() {\n\t\tconst {refresh, loading} = this.props;\n\n\t\treturn (\n\t\t\t<header>\n\t\t\t\t<DateRange refresh={refresh} loading={loading}/>\n\t\t\t\t<button className=\"settings-menu\" onClick={this.handleSettingsClick}>&#9776;</button>\n\t\t\t\t<Login isOpen={this.state.login} close={this.toggleLogin}/>\n\t\t\t</header>\n\t\t);\n\t}\n}","import React, { Component } from \"react\";\nimport { DataService } from \"../data\";\nimport { AddOnCardsHeader } from \"../header\";\nimport { AddOnSalesCards } from \"../cards\";\nimport \"./app.css\";\n\n\nexport default class App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.refresh = this.refresh.bind(this);\n\t\tthis.state = {vendors: [], loading: false};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.refresh();\n\t}\n\n\trefresh() {\n\t\tthis.setState({loading: true});\n\t\tDataService.refresh().then(vendors => this.setState({vendors, loading: false}));\n\t}\n\n\trender() {\n\t\tconst {vendors, loading} = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<AddOnCardsHeader refresh={this.refresh} loading={loading}/>\n\t\t\t\t<AddOnSalesCards vendors={vendors}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./app\";\n\nReactDOM.render(\n\t<App/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}